The set [1,2,3,...,n] contains a total of n! unique permutations.
By listing and labeling all of the permutations in order, we get the following sequence for n = 3:
1."123"
2."132"
3."213"
4."231"
5."312"
6."321"
Given n and k, return the kth permutation sequence.
Ex.
Input: n = 3, k = 3
Output: "213"

class Solution {
public:
    string nPermute(string str, long int n) 
    { 
        long int i = 1; 
     do{ 
            if (i == n) 
                break;
            i++; 
        }while (next_permutation(str.begin(), str.end())); 
    return str;
} 
    string getPermutation(int n, int k) 
    {
        string s(n,'0');
        for(int i=0;i<n;i++)
            s[i]+=i+1;
         return nPermute(s, k);
    }
};
